#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

### Configure environment
set -o errexit    # always exit on error
set -o pipefail   # don't ignore exit codes when piping output
set -o nounset    # fail on unset variables
unset GIT_DIR     # Avoid GIT_DIR leak from previous build steps

if [ "$STACK" != "heroku-16" ]; then
	echo "Need heroku-16 stack"
	exit 1
fi

echo "-----> Configure create-react-app build environment"
# Set env vars for the inner buildpacks in `.buildpacks`
# * during compile, install build tooling (devDependencies) with npm & Yarn
# * in runtime, NODE_ENV is not used (this buildpack launches a static web server)
export NPM_CONFIG_PRODUCTION=false
INHERITED_NODE_ENV="${NODE_ENV:-development}"
if [ "$INHERITED_NODE_ENV" = "production" ]
  then
  echo '       Setting `NODE_ENV=development` to install dependencies for `npm build`'
  export NODE_ENV=development
else
  echo "       Using \`NODE_ENV=${INHERITED_NODE_ENV}\`"
  export NODE_ENV="${INHERITED_NODE_ENV}"
fi

### Configure directories
BUILD_DIR=${1:-}
CACHE_DIR=${2:-}
ENV_DIR=${3:-}
BP_DIR=$(cd $(dirname ${0:-}); cd ..; pwd)

mkdir -p $BUILD_DIR/.profile.d
cp $BP_DIR/profile/* $BUILD_DIR/.profile.d/

### Load dependencies
source $BP_DIR/lib/utils

export_env_dir $ENV_DIR

echo "Installing the dependencies"
apt_install libunwind8 gettext

echo "Installing dotnet"
install_dotnet $BUILD_DIR 

export PATH="/app/dotnet:${PATH}"
export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}"

cd $BUILD_DIR
dotnet --info

PROJECT_FILE=$(x=$(dirname $(find ${BUILD_DIR} -maxdepth 5 -iname Startup.cs | head -1)); while [[ "$x" =~ $BUILD_DIR ]] ; do find "$x" -maxdepth 1 -name *.csproj; x=`dirname "$x"`; done)
PROJECT_NAME=$(basename ${PROJECT_FILE%.*})

echo "restore ${PROJECT_FILE}"
dotnet restore $PROJECT_FILE --runtime linux-x64

echo "publish ${PROJECT_FILE}"
dotnet publish $PROJECT_FILE --output ${BUILD_DIR}/heroku_output --configuration Release --runtime linux-x64

cat << EOT >> ${BUILD_DIR}/Procfile
web: cd \$HOME/heroku_output && ASPNETCORE_URLS='http://+:\$PORT' dotnet "./${PROJECT_NAME}.dll" --server.urls http://+:\$PORT
EOT